package com.day1.session1.demo;

import java.util.function.Predicate;

class Emp{
	private String name;

	public Emp(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}
	
	public boolean isNameContainRaj() {
		return this.name.contains("raj");
	}
}

public class F_SomeFIFromJDK {
	
	public static void main(String[] args) {
		//Predicate
		//to check if name contain raj
		
		//lambda vs Method ref ::
		
		Predicate<String> predicate= name-> name.contains("raj");
		
		Predicate<String> predicateWithMethodRef= Emp::isNameContainRaj;
		
		Predicate<Integer> predicate2=no-> no%2==0;
		
		System.out.println(predicate.test("amit"));
		
		System.out.println(predicate2.test(33));
		
		//predicate for costly book
		Predicate<Book>bookPredicateCostly= book ->book.getPrice()>=500;
		Predicate<Book>bookPredicateJava= book ->book.getTitle().contains("java");
		
		Book book=new Book(22, "java in action", "Raj", 400);
		//check if books is java book and costly too
		
		Predicate<Book>costlyAndJavaBookPredicate= bookPredicateCostly.and(bookPredicateJava);
		
		System.out.println(costlyAndJavaBookPredicate.test(book));
		
		Predicate<Book>costlyOrJavaBookPredicate= bookPredicateCostly.or(bookPredicateJava);
		
		Predicate<Book>costlyAndJavaBookPredicateNeg= bookPredicateCostly.and(bookPredicateJava).negate();
		
	
	}

}
